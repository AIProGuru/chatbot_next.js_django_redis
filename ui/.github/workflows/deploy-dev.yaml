name: Build and deploy to DEV

on:
  push:
    branches: [ develop ]

jobs:
  build:
    name: Build Image
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: ${{ steps.login-ecr.outputs.registry }}/ui:DEV-${{ github.run_number }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Check out Devops repo
      uses: actions/checkout@v2
      with:
        repository: benzylevi/devops
        token: ${{ secrets.GitHubPAT }}
        ref: argocd-dev

    - name: Update deployment in devops repo
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ui
        IMAGE_TAG: DEV-${{ github.run_number }}
      run: |
        git config --global user.email "buildagent@swingers.co.il"
        git config --global user.name "buildagent"
        cd services
        for template in $(grep -ir $ECR_REGISTRY/$ECR_REPOSITORY | awk '{print $1}' | sed 's/://g'); do echo "Updating $template"; yq eval -i ".spec.template.spec.containers.[].image=\"$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG\"" $template; cat $template; done
        git add .
        git commit -m "update $ECR_REPOSITORY to $IMAGE_TAG"
        git push origin
